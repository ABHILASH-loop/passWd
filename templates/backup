from webbrowser import get
from flask import Flask, render_template, request, request_tearing_down, url_for, redirect, session, flash
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__, template_folder = 'templates', static_url_path='/static')
app.static_folder = 'static'
app.secret_key = "nothing"
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///USER.sqlite3'

db = SQLAlchemy(app)

class userDetail(db.Model):
    _id = db.Column("id", db.Integer, primary_key=True)
    name = db.Column("Username", db.String(100))
    email = db.Column("email", db.String(100))
    passwd = db.Column("passwd", db.String(10))
    
    def __init__(self, name, email, passwd):
        self.name = name
        self.email = email
        self.passwd = passwd
        
def checkMail(email):
    a = [x[0] for x in userDetail.query.with_entities(userDetail.email)]
    if email in a:
        return True
    return False

@app.route('/', methods=["GET", "POST"])
def home():
    if request.method == "POST":
        if not int(request.form["popup"]):
            return redirect(url_for(
                "webDetails", 
                data_se=["Enter website name", "", ""], 
                webs_se=[["1","GOOGLE"]],
                show_se="True",
            ))
        
        elif int(request.form["popup"]) > 0:
            return redirect(url_for(
                "webDetails", 
                data_se=["GOOGLE", "Im Abhilash", "this is pass"], 
                webs_se=[["1","GOOGLE"]],
                show_se="True",
            ))
        
    return render_template("home.html", webs=[["1","GOOGLE"], ["2", "Instagram"]], show="False")
    
@app.route("/webdetails", methods=["GET", "POST"])
def webDetails():
    print(request.args.getlist('data_se'), request.args.getlist('webs_se'), request.args.get('show_se'))
    return render_template(
                "info_popup.html", 
                data= request.args.getlist('data_se'), 
                webs=request.args.getlist('webs_se'),
                show= request.args.get('show_se'),
                )
    

@app.route("/login", methods=["GET", "POST"])
def login():
    if request.method == 'POST':
        if request.form['signup'] == 'tosignup':
            return redirect(url_for("signup")) 
    return render_template("login.html") 

@app.route("/signup", methods=["GET", "POST"])
def signup():
    if request.method == 'POST':
        username = request.form.get("name")
        email = request.form.get("email")
        passwd = request.form.get("passwd")
        
      
        datas = userDetail(username, email, passwd)
        if  datas.query.filter_by(email=email).first(): 
            return render_template("user_exsist.html", email=email) 
        else:
            db.session.add(datas)
            db.session.commit()
            return render_template("OTP.html", email=email)
    return render_template("signup.html")




    


if __name__ == "__main__":
    ''' db.session.query(userDetail).delete()
    db.session.commit() '''
    
    db.create_all()
    app.run(debug=True)